plugins {
	id 'fabric-loom' version '0.10.+'
	id 'io.github.juuxel.loom-quiltflower-mini' version '1.2.1'
	id 'java-library'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${getMCVersionString()}"
group = project.maven_group

// This field defines the Java version your mod target.
def targetJavaVersion = 16

boolean isMCVersionNonRelease() {
	return project.minecraft_version.matches('^\\d\\dw\\d\\d[a-z]$')
			|| project.minecraft_version.matches('\\d+\\.\\d+-(pre|rc)(\\d+)')
}

String getMCVersionString() {
	if (isMCVersionNonRelease()) {
		return project.minecraft_version
	}
	def version = project.minecraft_version.split('\\.')
	return version[0] + '.' + version[1]
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation fabricApi.module('fabric-resource-loader-v0', project.fabric_api_version)
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'

	it.options.release.set(targetJavaVersion)
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			pom {
				name = 'Pride Lib'
				description = 'A unified library for data-driven flags'
			}
		}
	}

	repositories {
		mavenLocal()
		maven {
			name 'BuildDirLocal'
			url "$buildDir/repo"
		}

		def prideLibMaven = System.getenv('PRIDELIB_MAVEN')
		if (prideLibMaven) {
			maven {
				name 'PrideLibMaven'
				url uri(prideLibMaven)
				credentials {
					username = project.findProperty('gpr.user') ?: System.getenv('MAVEN_USERNAME')
					password = project.findProperty('gpr.key') ?: System.getenv('MAVEN_PASSWORD')
				}
			}
		}
	}
}
